AWSTemplateFormatVersion: '2010-09-09'
Description: 'Multi-tenant logging infrastructure - Main template with nested stacks'

Parameters:
  # Basic Configuration
  Environment:
    Type: String
    Default: development
    AllowedValues: [production, staging, development]
    Description: Environment name
    
  ProjectName:
    Type: String
    Default: multi-tenant-logging
    Description: Name of the project for resource naming
    
  # EKS Configuration
  EksOidcIssuer:
    Type: String
    Default: ""
    Description: OIDC issuer URL for the EKS cluster (without https://)
    
  # Lambda Configuration
    
  # S3 Configuration
  S3StandardIADays:
    Type: Number
    Default: 30
    MinValue: 1
    Description: Days after which to transition S3 objects to Standard-IA
    
  S3GlacierDays:
    Type: Number
    Default: 90
    MinValue: 1
    Description: Days after which to transition S3 objects to Glacier
    
  S3DeepArchiveDays:
    Type: Number
    Default: 365
    MinValue: 1
    Description: Days after which to transition S3 objects to Deep Archive
    
  S3LogRetentionDays:
    Type: Number
    Default: 2555
    MinValue: 1
    Description: Number of days to retain logs in S3
    
  EnableS3IntelligentTiering:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: Enable S3 Intelligent Tiering for cost optimization
    
  EnableS3Encryption:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
    Description: Enable S3 server-side encryption

  TemplateBucket:
    Type: String
    Description: S3 bucket containing the nested CloudFormation templates

Conditions:
  HasEksOidcIssuer: !Not [!Equals [!Ref EksOidcIssuer, ""]]

Resources:
  # Core Infrastructure Stack (S3, DynamoDB, SNS/SQS, IAM)
  CoreInfrastructureStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/cloudformation/templates/core-infrastructure.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
        EksOidcIssuer: !Ref EksOidcIssuer
        S3StandardIADays: !Ref S3StandardIADays
        S3GlacierDays: !Ref S3GlacierDays
        S3DeepArchiveDays: !Ref S3DeepArchiveDays
        S3LogRetentionDays: !Ref S3LogRetentionDays
        EnableS3IntelligentTiering: !Ref EnableS3IntelligentTiering
        EnableS3Encryption: !Ref EnableS3Encryption
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: cloudformation
        - Key: StackType
          Value: core-infrastructure
  
  # Lambda Functions Stack
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CoreInfrastructureStack
    Properties:
      TemplateURL: !Sub 'https://s3.amazonaws.com/${TemplateBucket}/cloudformation/templates/lambda-stack.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
        LogDistributorRoleArn: !GetAtt CoreInfrastructureStack.Outputs.LogDistributorRoleArn
        TenantConfigTableName: !GetAtt CoreInfrastructureStack.Outputs.TenantConfigTableName
        LogDeliveryTopicArn: !GetAtt CoreInfrastructureStack.Outputs.LogDeliveryTopicArn
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: cloudformation
        - Key: StackType
          Value: lambda-functions
  
  
Outputs:
  # Core Infrastructure Outputs
  CentralLoggingBucketName:
    Description: Name of the central logging S3 bucket
    Value: !GetAtt CoreInfrastructureStack.Outputs.CentralLoggingBucketName
    Export:
      Name: !Sub '${AWS::StackName}-CentralLoggingBucketName'
  
  TenantConfigTableName:
    Description: Name of the tenant configuration DynamoDB table
    Value: !GetAtt CoreInfrastructureStack.Outputs.TenantConfigTableName
    Export:
      Name: !Sub '${AWS::StackName}-TenantConfigTableName'
  
  # Lambda Outputs
  LogDistributorFunctionName:
    Description: Name of the log distributor Lambda function
    Value: !GetAtt LambdaStack.Outputs.LogDistributorFunctionName
    Export:
      Name: !Sub '${AWS::StackName}-LogDistributorFunctionName'
  
  LogDistributorFunctionArn:
    Description: ARN of the log distributor Lambda function
    Value: !GetAtt LambdaStack.Outputs.LogDistributorFunctionArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDistributorFunctionArn'
  
  # IAM Role Outputs
  VectorRoleArn:
    Description: ARN of the Vector service account role
    Value: !GetAtt CoreInfrastructureStack.Outputs.VectorRoleArn
    Export:
      Name: !Sub '${AWS::StackName}-VectorRoleArn'
  
  LogDistributorRoleArn:
    Description: ARN of the log distributor Lambda role
    Value: !GetAtt CoreInfrastructureStack.Outputs.LogDistributorRoleArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDistributorRoleArn'
  
  # SNS Outputs
  LogDeliveryTopicArn:
    Description: ARN of the log delivery SNS topic
    Value: !GetAtt CoreInfrastructureStack.Outputs.LogDeliveryTopicArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDeliveryTopicArn'
  
  # SQS Outputs (from Lambda stack)
  LogDeliveryQueueArn:
    Description: ARN of the log delivery SQS queue
    Value: !GetAtt LambdaStack.Outputs.LogDeliveryQueueArn
    Export:
      Name: !Sub '${AWS::StackName}-LogDeliveryQueueArn'
  
  # Stack Information
  StackVersion:
    Description: Version of this CloudFormation stack (POC)
    Value: "1.0.0-poc"
    Export:
      Name: !Sub '${AWS::StackName}-StackVersion'